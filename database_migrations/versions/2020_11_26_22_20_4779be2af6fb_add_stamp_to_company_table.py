"""add stamp to company table

Revision ID: 4779be2af6fb
Revises: 94abbca64372
Create Date: 2020-11-26 22:20:47.803933

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.orm import *
from sqlalchemy.ext.declarative import *
from sqlalchemy.schema import *

# revision identifiers, used by Alembic.
revision = '4779be2af6fb'
down_revision = '94abbca64372'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('company', 'update_stamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.add_column('company_exchange_relation', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False))
    op.add_column('country_info', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=True))
    op.add_column('exchange', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False))
    op.add_column('industry', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False))
    op.add_column('sector', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False))
    op.add_column('state_info', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=True))
    op.add_column('sub_industry', sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('sub_industry', 'update_stamp')
    op.drop_column('state_info', 'update_stamp')
    op.drop_column('sector', 'update_stamp')
    op.drop_column('industry', 'update_stamp')
    op.drop_column('exchange', 'update_stamp')
    op.drop_column('country_info', 'update_stamp')
    op.drop_column('company_exchange_relation', 'update_stamp')
    op.alter_column('company', 'update_stamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###
