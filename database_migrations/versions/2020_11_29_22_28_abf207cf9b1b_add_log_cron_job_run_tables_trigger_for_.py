"""add log, cron_job_run tables + trigger for stamp on log

Revision ID: abf207cf9b1b
Revises: 30474952299c
Create Date: 2020-11-29 22:28:49.948340

"""
from alembic import op
import sqlalchemy as sa
from alembic import op
from sqlalchemy import *
from sqlalchemy import orm
from sqlalchemy.orm import *
from sqlalchemy.ext.declarative import *
from sqlalchemy.schema import *


# revision identifiers, used by Alembic.
revision = 'abf207cf9b1b'
down_revision = '30474952299c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_type', sa.String(length=20), nullable=False),
    sa.Column('message', sa.String(length=200), nullable=True),
    sa.Column('data', sa.LargeBinary(), nullable=True),
    sa.Column('update_stamp', sa.DateTime(timezone=True), server_default=FetchedValue(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_log'))
    )
    op.create_table('cron_job_run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['log_id'], ['log.id'], name=op.f('fk_cron_job_run_log_id_log'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cron_job_run'))
    )
    # ### end Alembic commands ###

    conn = op.get_bind()
    
    conn.execute(       """
                            CREATE TRIGGER update_log_update_stamp BEFORE UPDATE OR INSERT
                            ON log FOR EACH ROW EXECUTE PROCEDURE 
                            automatic_update_stamp_column();
                        """                   
                )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cron_job_run')
    op.drop_table('log')
    conn = op.get_bind()
    
    conn.execute(       """
                            DROP TRIGGER IF EXISTS update_log_update_stamp on log;
                        """                   
                )
